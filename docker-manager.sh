#!/bin/bash

# üé® –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # reset

# üîÑ –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (—Å–µ–∫—É–Ω–¥—ã)
REFRESH=5
MAX_IMAGE_LEN=30  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–∞

while true; do
    clear
    echo -e "${CYAN}=== –ú–µ–Ω–µ–¥–∂–µ—Ä Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ ===${NC}"
    echo "(–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–∂–¥—ã–µ $REFRESH —Å–µ–∫)"
    echo

    # —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    mapfile -t containers < <(docker ps -a --format "{{.Names}}|{{.Status}}|{{.Image}}|{{.Ports}}")

    if [ ${#containers[@]} -eq 0 ]; then
        echo -e "${RED}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.${NC}"
        exit 0
    fi

    # –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
    printf "%3s | %-20s | %-10s | %-30s | %-20s\n" "‚Ññ" "–ò–º—è" "–°—Ç–∞—Ç—É—Å" "–û–±—Ä–∞–∑" "–ü–æ—Ä—Ç—ã"
    echo "------------------------------------------------------------------------------------------------"

    # –≤—ã–≤–æ–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    for i in "${!containers[@]}"; do
        name=$(echo "${containers[$i]}"      | cut -d'|' -f1 | xargs)
        status_raw=$(echo "${containers[$i]}"| cut -d'|' -f2 | xargs)
        image=$(echo "${containers[$i]}"     | cut -d'|' -f3 | xargs)
        ports=$(echo "${containers[$i]}"     | cut -d'|' -f4 | xargs)

        # –°—Ç–∞—Ç—É—Å: —Ç–æ–ª—å–∫–æ active –∏–ª–∏ stopped
        if [[ "$status_raw" == Up* ]]; then
            status="${GREEN}active${NC}"
        else
            status="${RED}stopped${NC}"
        fi

        # –û–±—Ä–µ–∑–∫–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –æ–±—Ä–∞–∑–∞
        if [ ${#image} -gt $MAX_IMAGE_LEN ]; then
            image="${image:0:$((MAX_IMAGE_LEN-3))}..."
        fi

        # –ü–æ—Ä—Ç—ã: –≤—ã–≤–æ–¥–∏–º –≤—Å–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ N/A
        if [[ -n "$ports" ]]; then
            ports_filtered=$(echo "$ports" | grep -oP '(\d+)->\d+' | cut -d'>' -f1 | paste -sd',' -)
            [[ -z "$ports_filtered" ]] && ports_filtered="N/A"
        else
            ports_filtered="N/A"
        fi

        # –≤—ã–≤–æ–¥–∏–º —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π ANSI-–∫–æ–¥–æ–≤
        printf "%3d | ${YELLOW}%-20s${NC} | %b | %-30s | %-20s\n" \
            $((i+1)) "$name" "$status" "$image" "$ports_filtered"
    done

    echo
    echo -e "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    echo -e "–∏–ª–∏ ${YELLOW}q${NC} –¥–ª—è –≤—ã—Ö–æ–¥–∞, ${YELLOW}r${NC} —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫:"
    read -t $REFRESH choice

    if [[ $? -gt 128 ]]; then
        continue
    fi

    if [[ "$choice" == "q" ]]; then
        echo "–í—ã—Ö–æ–¥..."
        exit 0
    fi

    if [[ "$choice" == "r" ]]; then
        continue
    fi

    if [[ "$choice" =~ ^[0-9]+$ ]] && (( choice >= 1 && choice <= ${#containers[@]} )); then
        container_name=$(echo "${containers[$((choice-1))]}" | cut -d'|' -f1 | xargs)

        while true; do
            clear
            echo -e "${CYAN}=== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º: ${YELLOW}$container_name${NC} ==="
            echo -e "1) ${GREEN}–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å üîÑ${NC}"
            echo -e "2) ${GREEN}–ó–∞–ø—É—Å—Ç–∏—Ç—å ‚ñ∂Ô∏è${NC}"
            echo -e "3) ${RED}–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ‚èπ${NC}"
            echo -e "4) ${YELLOW}–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫) üìú${NC}"
            echo -e "5) ${CYAN}–û—Ç–∫—Ä—ã—Ç—å bash –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ üêö${NC}"
            echo -e "b) –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É"
            echo -e "q) –í—ã—Ö–æ–¥"
            echo
            read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " action

            case "$action" in
                1)
                    docker restart "$container_name"
                    echo -e "${GREEN}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.${NC}"
                    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
                    ;;
                2)
                    docker start "$container_name"
                    echo -e "${GREEN}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω.${NC}"
                    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
                    ;;
                3)
                    docker stop "$container_name"
                    echo -e "${RED}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
                    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
                    ;;
                4)
                    echo -e "${YELLOW}--- –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ($container_name) ---${NC}"
                    docker logs --tail 30 "$container_name"
                    echo -e "${YELLOW}------------------------------------------${NC}"
                    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
                    ;;
                5)
                    echo -e "${CYAN}–û—Ç–∫—Ä—ã–≤–∞—é bash –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞... (exit –¥–ª—è –≤—ã—Ö–æ–¥–∞)${NC}"
                    docker exec -it "$container_name" bash
                    ;;
                b)
                    break
                    ;;
                q)
                    echo "–í—ã—Ö–æ–¥..."
                    exit 0
                    ;;
                *)
                    echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                    sleep 1
                    ;;
            esac
        done
    else
        echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!${NC}"
        sleep 1
    fi
done
